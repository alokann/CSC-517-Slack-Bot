[
{"label": "Overview", "value": ["/v3/", "/v3/media/", "/v3/oauth_authorizations/", "/v3/auth/", "/v3/troubleshooting/", "/v3/previews/", "/v3/versions/"]},
{"label": "Activity", "value": ["/v3/activity/", "/v3/activity/events/", "/v3/activity/events/types/", "/v3/activity/feeds/", "/v3/activity/notifications/", "/v3/activity/starring/", "/v3/activity/watching/"]},
{"label": "Checks", "value": ["/v3/checks/", "/v3/checks/runs/", "/v3/checks/suites/"]},
{"label": "Gists", "value": ["/v3/gists/", "/v3/gists/comments/"]},
{"label": "Git Data", "value": ["/v3/git/", "/v3/git/blobs/", "/v3/git/commits/", "/v3/git/refs/", "/v3/git/tags/", "/v3/git/trees/"]},
{"label": "GitHub Apps", "value": ["/v3/apps/", "/v3/apps/installations/", "/v3/apps/permissions/", "/v3/apps/available-endpoints/"]},
{"label": "Marketplace", "value": ["/v3/apps/marketplace/"]},
{"label": "Interactions", "value": ["/v3/interactions/", "/v3/interactions/orgs/", "/v3/interactions/repos/"]},
{"label": "Issues", "value": ["/v3/issues/", "/v3/issues/assignees/", "/v3/issues/comments/", "/v3/issues/events/", "/v3/issues/labels/", "/v3/issues/milestones/", "/v3/issues/timeline/"]},
{"label": "Migrations", "value": ["/v3/migrations/", "/v3/migrations/orgs/", "/v3/migrations/source_imports/", "/v3/migrations/users/"]},
{"label": "Miscellaneous", "value": ["/v3/misc/", "/v3/codes_of_conduct/", "/v3/emojis/", "/v3/gitignore/", "/v3/licenses/", "/v3/markdown/", "/v3/meta/", "/v3/rate_limit/"]},
{"label": "Organizations", "value": ["/v3/orgs/", "/v3/orgs/blocking/", "/v3/orgs/members/", "/v3/orgs/outside_collaborators/", "/v3/orgs/hooks/"]},
{"label": "Projects", "value": ["/v3/projects/", "/v3/projects/cards/", "/v3/projects/collaborators/", "/v3/projects/columns/"]},
{"label": "Pull Requests", "value": ["/v3/pulls/", "/v3/pulls/reviews/", "/v3/pulls/comments/", "/v3/pulls/review_requests/"]},
{"label": "Reactions", "value": ["/v3/reactions/", "/v3/reactions/#list-reactions-for-a-commit-comment", "/v3/reactions/#list-reactions-for-an-issue", "/v3/reactions/#list-reactions-for-an-issue-comment", "/v3/reactions/#list-reactions-for-a-pull-request-review-comment", "/v3/reactions/#list-reactions-for-a-team-discussion", "/v3/reactions/#list-reactions-for-a-team-discussion-comment"]},
{"label": "Repositories", "value": ["/v3/repos/", "/v3/repos/branches/", "/v3/repos/collaborators/", "/v3/repos/comments/", "/v3/repos/commits/", "/v3/repos/community/", "/v3/repos/contents/", "/v3/repos/keys/", "/v3/repos/deployments/", "/v3/repos/downloads/", "/v3/repos/forks/", "/v3/repos/invitations/", "/v3/repos/merging/", "/v3/repos/pages/", "/v3/repos/releases/", "/v3/repos/statistics/", "/v3/repos/statuses/", "/v3/repos/traffic/", "/v3/repos/hooks/"]},
{"label": "Search", "value": ["/v3/search/", "/v3/search/#search-repositories", "/v3/search/#search-code", "/v3/search/#search-commits", "/v3/search/#search-issues-and-pull-requests", "/v3/search/#search-users", "/v3/search/#search-topics", "/v3/search/#text-match-metadata", "/v3/search/legacy/"]},
{"label": "Teams", "value": ["/v3/teams/", "/v3/teams/discussions/", "/v3/teams/discussion_comments/", "/v3/teams/members/", "/v3/teams/team_sync/"]},
{"label": "SCIM", "value": ["/v3/scim/"]},
{"label": "Users", "value": ["/v3/users/", "/v3/users/blocking/", "/v3/users/emails/", "/v3/users/followers/", "/v3/users/keys/", "/v3/users/gpg_keys/"]},
{"label": "Overview", "value": ["/v3/", "/v3/media/", "/v3/oauth_authorizations/", "/v3/auth/", "/v3/troubleshooting/", "/v3/previews/", "/v3/versions/"]},
{"label": "Activity", "value": ["/v3/activity/", "/v3/activity/events/", "/v3/activity/events/types/", "/v3/activity/feeds/", "/v3/activity/notifications/", "/v3/activity/starring/", "/v3/activity/watching/"]},
{"label": "Checks", "value": ["/v3/checks/", "/v3/checks/runs/", "/v3/checks/suites/"]},
{"label": "Gists", "value": ["/v3/gists/", "/v3/gists/comments/"]},
{"label": "Git Data", "value": ["/v3/git/", "/v3/git/blobs/", "/v3/git/commits/", "/v3/git/refs/", "/v3/git/tags/", "/v3/git/trees/"]},
{"label": "GitHub Apps", "value": ["/v3/apps/", "/v3/apps/installations/", "/v3/apps/permissions/", "/v3/apps/available-endpoints/"]},
{"label": "Marketplace", "value": ["/v3/apps/marketplace/"]},
{"label": "Interactions", "value": ["/v3/interactions/", "/v3/interactions/orgs/", "/v3/interactions/repos/"]},
{"label": "Issues", "value": ["/v3/issues/", "/v3/issues/assignees/", "/v3/issues/comments/", "/v3/issues/events/", "/v3/issues/labels/", "/v3/issues/milestones/", "/v3/issues/timeline/"]},
{"label": "Migrations", "value": ["/v3/migrations/", "/v3/migrations/orgs/", "/v3/migrations/source_imports/", "/v3/migrations/users/"]},
{"label": "Miscellaneous", "value": ["/v3/misc/", "/v3/codes_of_conduct/", "/v3/emojis/", "/v3/gitignore/", "/v3/licenses/", "/v3/markdown/", "/v3/meta/", "/v3/rate_limit/"]},
{"label": "Organizations", "value": ["/v3/orgs/", "/v3/orgs/blocking/", "/v3/orgs/members/", "/v3/orgs/outside_collaborators/", "/v3/orgs/hooks/"]},
{"label": "Projects", "value": ["/v3/projects/", "/v3/projects/cards/", "/v3/projects/collaborators/", "/v3/projects/columns/"]},
{"label": "Pull Requests", "value": ["/v3/pulls/", "/v3/pulls/reviews/", "/v3/pulls/comments/", "/v3/pulls/review_requests/"]},
{"label": "Reactions", "value": ["/v3/reactions/", "/v3/reactions/#list-reactions-for-a-commit-comment", "/v3/reactions/#list-reactions-for-an-issue", "/v3/reactions/#list-reactions-for-an-issue-comment", "/v3/reactions/#list-reactions-for-a-pull-request-review-comment", "/v3/reactions/#list-reactions-for-a-team-discussion", "/v3/reactions/#list-reactions-for-a-team-discussion-comment"]},
{"label": "Repositories", "value": ["/v3/repos/", "/v3/repos/branches/", "/v3/repos/collaborators/", "/v3/repos/comments/", "/v3/repos/commits/", "/v3/repos/community/", "/v3/repos/contents/", "/v3/repos/keys/", "/v3/repos/deployments/", "/v3/repos/downloads/", "/v3/repos/forks/", "/v3/repos/invitations/", "/v3/repos/merging/", "/v3/repos/pages/", "/v3/repos/releases/", "/v3/repos/statistics/", "/v3/repos/statuses/", "/v3/repos/traffic/", "/v3/repos/hooks/"]},
{"label": "Search", "value": ["/v3/search/", "/v3/search/#search-repositories", "/v3/search/#search-code", "/v3/search/#search-commits", "/v3/search/#search-issues-and-pull-requests", "/v3/search/#search-users", "/v3/search/#search-topics", "/v3/search/#text-match-metadata", "/v3/search/legacy/"]},
{"headers": ["Get a single reference", "List matching references", "Create a reference", "Update a reference", "Delete a reference"], "methods": ["GET", "GET", "GET", "GET", "POST", "PATCH", "DELETE", "DELETE", "DELETE"], "endpoints": ["/repos/:owner/:repo/git/ref/:ref", "/repos/octocat/Hello-World/git/ref/heads/skunkworkz/featureA", "/repos/:owner/:repo/git/matching-refs/:ref", "/repos/octocat/Hello-World/git/matching-refs/heads/feature", "/repos/:owner/:repo/git/refs", "/repos/:owner/:repo/git/refs/:ref", "/repos/:owner/:repo/git/refs/:ref", "/repos/octocat/Hello-World/git/refs/heads/feature-a", "/repos/octocat/Hello-World/git/refs/tags/v1.0"]},
{"label": "Teams", "value": ["/v3/teams/", "/v3/teams/discussions/", "/v3/teams/discussion_comments/", "/v3/teams/members/", "/v3/teams/team_sync/"]},
{"label": "SCIM", "value": ["/v3/scim/"]},
{"label": "Users", "value": ["/v3/users/", "/v3/users/blocking/", "/v3/users/emails/", "/v3/users/followers/", "/v3/users/keys/", "/v3/users/gpg_keys/"]},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["List watchers", "List repositories being watched", "Get a Repository Subscription", "Set a Repository Subscription", "Delete a Repository Subscription", "Check if you are watching a repository (LEGACY)", "Watch a repository (LEGACY)", "Stop watching a repository (LEGACY)"], "methods": ["GET", "GET", "GET", "GET", "PUT", "DELETE", "GET", "PUT", "DELETE"], "endpoints": ["/repos/:owner/:repo/subscribers", "/users/:username/subscriptions", "/user/subscriptions", "/repos/:owner/:repo/subscription", "/repos/:owner/:repo/subscription", "/repos/:owner/:repo/subscription", "/user/subscriptions/:owner/:repo", "/user/subscriptions/:owner/:repo", "/user/subscriptions/:owner/:repo"]},
{"headers": ["Get a blob", "Create a blob", "Custom media types"], "methods": ["GET", "POST"], "endpoints": ["/repos/:owner/:repo/git/blobs/:file_sha", "/repos/:owner/:repo/git/blobs"]},
{"headers": ["List Stargazers", "List repositories being starred", "Check if you are starring a repository", "Star a repository", "Unstar a repository"], "methods": ["GET", "GET", "GET", "GET", "PUT", "DELETE"], "endpoints": ["/repos/:owner/:repo/stargazers", "/users/:username/starred", "/user/starred", "/user/starred/:owner/:repo", "/user/starred/:owner/:repo", "/user/starred/:owner/:repo"]},
{"headers": ["Authentication", "Truncation", "List a user's gists", "List all public gists", "List starred gists", "Get a single gist", "Get a specific revision of a gist", "Create a gist", "Edit a gist", "List gist commits", "Star a gist", "Unstar a gist", "Check if a gist is starred", "Fork a gist", "List gist forks", "Delete a gist", "Custom media types"], "methods": ["GET", "GET", "GET", "GET", "GET", "GET", "POST", "PATCH", "GET", "PUT", "DELETE", "GET", "POST", "GET", "DELETE"], "endpoints": ["/users/:username/gists", "/gists", "/gists/public", "/gists/starred", "/gists/:gist_id", "/gists/:gist_id/:sha", "/gists", "/gists/:gist_id", "/gists/:gist_id/commits", "/gists/:gist_id/star", "/gists/:gist_id/star", "/gists/:gist_id/star", "/gists/:gist_id/forks", "/gists/:gist_id/forks", "/gists/:gist_id"]},
{"headers": ["List comments on a gist", "Get a single comment", "Create a comment", "Edit a comment", "Delete a comment", "Custom media types"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE"], "endpoints": ["/gists/:gist_id/comments", "/gists/:gist_id/comments/:comment_id", "/gists/:gist_id/comments", "/gists/:gist_id/comments/:comment_id", "/gists/:gist_id/comments/:comment_id"]},
{"headers": ["Get a single check suite", "List check suites for a specific ref", "Set preferences for check suites on a repository", "Create a check suite", "Rerequest check suite"], "methods": ["GET", "GET", "PATCH", "POST", "POST"], "endpoints": ["/repos/:owner/:repo/check-suites/:check_suite_id", "/repos/:owner/:repo/commits/:ref/check-suites", "/repos/:owner/:repo/check-suites/preferences", "/repos/:owner/:repo/check-suites", "/repos/:owner/:repo/check-suites/:check_suite_id/rerequest"]},
{"headers": ["Create a check run", "Update a check run", "List check runs for a specific ref", "List check runs in a check suite", "Get a single check run", "List annotations for a check run"], "methods": ["POST", "PATCH", "GET", "GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/check-runs", "/repos/:owner/:repo/check-runs/:check_run_id", "/repos/:owner/:repo/commits/:ref/check-runs", "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs", "/repos/:owner/:repo/check-runs/:check_run_id", "/repos/:owner/:repo/check-runs/:check_run_id/annotations"]},
{"headers": ["Get a commit", "Create a commit"], "methods": ["GET", "POST"], "endpoints": ["/repos/:owner/:repo/git/commits/:commit_sha", "/repos/:owner/:repo/git/commits"]},
{"headers": ["Introducing the Git Database API", "Checking mergeability of pull requests"], "methods": [], "endpoints": []},
{"headers": ["List feeds", "Example of getting an Atom feed"], "methods": ["GET"], "endpoints": ["/feeds"]},
{"headers": ["List public events", "List repository events", "List issue events for a repository", "List public events for a network of repositories", "List public events for an organization", "List events that a user has received", "List public events that a user has received", "List events performed by a user", "List public events performed by a user", "List events for an organization"], "methods": ["GET", "GET", "GET", "GET", "GET", "GET", "GET", "GET"], "endpoints": ["/events", "/repos/:owner/:repo/events", "/repos/:owner/:repo/issues/events", "/networks/:owner/:repo/events", "/users/:username/received_events", "/users/:username/received_events/public", "/users/:username/events", "/users/:username/events/public"]},
{"headers": ["Notification reasons", "List your notifications", "List your notifications in a repository", "Mark as read", "Mark notifications as read in a repository", "View a single thread", "Mark a thread as read", "Get a thread subscription", "Set a thread subscription", "Delete a thread subscription"], "methods": ["GET", "GET", "PUT", "PUT", "GET", "PATCH", "GET", "PUT", "DELETE"], "endpoints": ["/notifications", "/repos/:owner/:repo/notifications", "/notifications", "/repos/:owner/:repo/notifications", "/notifications/threads/:thread_id", "/notifications/threads/:thread_id", "/notifications/threads/:thread_id/subscription", "/notifications/threads/:thread_id/subscription", "/notifications/threads/:thread_id/subscription"]},
{"headers": ["CheckRunEvent", "CheckSuiteEvent", "CommitCommentEvent", "ContentReferenceEvent", "CreateEvent", "DeleteEvent", "DeployKeyEvent", "DeploymentEvent", "DeploymentStatusEvent", "DownloadEvent", "FollowEvent", "ForkEvent", "ForkApplyEvent", "GitHubAppAuthorizationEvent", "GistEvent", "GollumEvent", "InstallationEvent", "InstallationRepositoriesEvent", "IssueCommentEvent", "IssuesEvent", "LabelEvent", "MarketplacePurchaseEvent", "MemberEvent", "MembershipEvent", "MetaEvent", "MilestoneEvent", "OrganizationEvent", "OrgBlockEvent", "PageBuildEvent", "ProjectCardEvent", "ProjectColumnEvent", "ProjectEvent", "PublicEvent", "PullRequestEvent", "PullRequestReviewEvent", "PullRequestReviewCommentEvent", "PushEvent", "RegistryPackageEvent", "ReleaseEvent", "RepositoryDispatchEvent", "RepositoryEvent", "RepositoryImportEvent", "RepositoryVulnerabilityAlertEvent", "SecurityAdvisoryEvent", "StarEvent", "StatusEvent", "TeamEvent", "TeamAddEvent", "WatchEvent"], "methods": [], "endpoints": []},
{"headers": ["List followers of a user", "List users followed by another user", "Check if you are following a user", "Check if one user follows another", "Follow a user", "Unfollow a user"], "methods": ["GET", "GET", "GET", "GET", "GET", "GET", "PUT", "DELETE"], "endpoints": ["/users/:username/followers", "/user/followers", "/users/:username/following", "/user/following", "/user/following/:username", "/users/:username/following/:target_user", "/user/following/:username", "/user/following/:username"]},
{"headers": [], "methods": [], "endpoints": []},
{"headers": [], "methods": ["GET"], "endpoints": ["/rate_limit"]},
{"headers": ["List email addresses for a user", "List public email addresses for a user", "Add email address(es)", "Delete email address(es)", "Toggle primary email visibility"], "methods": ["GET", "GET", "POST", "DELETE", "PATCH"], "endpoints": ["/user/emails", "/user/public_emails", "/user/emails", "/user/emails", "/user/email/visibility"]},
{"headers": ["List GPG keys for a user", "List your GPG keys", "Get a single GPG key", "Create a GPG key", "Delete a GPG key"], "methods": ["GET", "GET", "GET", "POST", "DELETE"], "endpoints": ["/users/:username/gpg_keys", "/user/gpg_keys", "/user/gpg_keys/:gpg_key_id", "/user/gpg_keys", "/user/gpg_keys/:gpg_key_id"]},
{"headers": ["List public keys for a user", "List your public keys", "Get a single public key", "Create a public key", "Update a public key", "Delete a public key"], "methods": ["GET", "GET", "GET", "POST", "DELETE"], "endpoints": ["/users/:username/keys", "/user/keys", "/user/keys/:key_id", "/user/keys", "/user/keys/:key_id"]},
{"headers": ["List blocked users", "Check whether you've blocked a user", "Block a user", "Unblock a user"], "methods": ["GET", "GET", "PUT", "DELETE"], "endpoints": ["/user/blocks", "/user/blocks/:username", "/user/blocks/:username", "/user/blocks/:username"]},
{"headers": ["Get a single user", "Get the authenticated user", "Update the authenticated user", "Get contextual information about a user", "Get all users"], "methods": ["GET", "GET", "PATCH", "GET", "GET"], "endpoints": ["/users/:username", "/user", "/user", "/users/:username/hovercard", "/users"]},
{"headers": ["SCIM Provisioning for Organizations", "Authenticating calls to the SCIM API", "Mapping of SAML and SCIM data", "Supported SCIM User attributes", "Get a list of provisioned identities", "Get provisioning details for a single user", "Provision and invite users", "Replace a provisioned user's information", "Update a user attribute", "Remove a user from the organization"], "methods": [], "endpoints": []},
{"headers": ["List IdP groups in an organization", "List IdP groups for a team", "Create or update IdP group connections"], "methods": ["GET", "PATCH"], "endpoints": ["/teams/:team_id/team-sync/group-mappings", "/teams/:team_id/team-sync/group-mappings"]},
{"headers": ["List team members", "Get team member", "Add team member", "Remove team member", "Get team membership", "Add or update team membership", "Remove team membership", "List pending team invitations"], "methods": ["GET", "GET", "PUT", "DELETE", "GET", "PUT", "DELETE", "GET"], "endpoints": ["/teams/:team_id/members", "/teams/:team_id/members/:username", "/teams/:team_id/members/:username", "/teams/:team_id/members/:username", "/teams/:team_id/memberships/:username", "/teams/:team_id/memberships/:username", "/teams/:team_id/memberships/:username", "/teams/:team_id/invitations"]},
{"headers": ["List comments", "Get a single comment", "Create a comment", "Edit a comment", "Delete a comment"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE"], "endpoints": ["/teams/:team_id/discussions/:discussion_number/comments", "/teams/:team_id/discussions/:discussion_number/comments/:comment_number", "/teams/:team_id/discussions/:discussion_number/comments", "/teams/:team_id/discussions/:discussion_number/comments/:comment_number", "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"]},
{"headers": ["List discussions", "Get a single discussion", "Create a discussion", "Edit a discussion", "Delete a discussion"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE"], "endpoints": ["/teams/:team_id/discussions", "/teams/:team_id/discussions/:discussion_number", "/teams/:team_id/discussions", "/teams/:team_id/discussions/:discussion_number", "/teams/:team_id/discussions/:discussion_number"]},
{"headers": ["List teams", "Get team", "Get team by name", "Create team", "Edit team", "Delete team", "List child teams", "List team repos", "Check if a team manages a repository", "Add or update team repository", "Remove team repository", "List user teams", "List team projects", "Review a team project", "Add or update team project", "Remove team project"], "methods": ["GET", "PATCH", "DELETE", "GET", "GET", "GET", "PUT", "DELETE", "GET", "GET", "GET", "PUT", "DELETE"], "endpoints": ["/teams/:team_id", "/teams/:team_id", "/teams/:team_id", "/teams/:team_id/teams", "/teams/:team_id/repos", "/teams/:team_id/repos/:owner/:repo", "/teams/:team_id/repos/:owner/:repo", "/teams/:team_id/repos/:owner/:repo", "/user/teams", "/teams/:team_id/projects", "/teams/:team_id/projects/:project_id", "/teams/:team_id/projects/:project_id", "/teams/:team_id/projects/:project_id"]},
{"headers": ["Search issues", "Search repositories", "Search users", "Email search"], "methods": ["GET", "GET", "GET", "GET"], "endpoints": ["/legacy/issues/search/:owner/:repository/:state/:keyword", "/legacy/repos/search/:keyword", "/legacy/user/search/:keyword", "/legacy/user/email/:email"]},
{"headers": ["Search repositories", "Search commits", "Search code", "Search issues and pull requests", "Search users", "Search topics", "Search labels", "Text match metadata"], "methods": ["GET", "GET", "GET", "GET", "GET", "GET", "GET"], "endpoints": ["/search/repositories", "/search/commits", "/search/code", "/search/issues", "/search/users", "/search/topics", "/search/labels"]},
{"headers": ["List hooks", "Get single hook", "Create a hook", "Edit a hook", "Test a push hook", "Ping a hook", "Delete a hook", "Receiving Webhooks", "PubSubHubbub"], "methods": ["GET", "GET", "POST", "PATCH", "POST", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/hooks", "/repos/:owner/:repo/hooks/:hook_id", "/repos/:owner/:repo/hooks", "/repos/:owner/:repo/hooks/:hook_id", "/repos/:owner/:repo/hooks/:hook_id/tests", "/repos/:owner/:repo/hooks/:hook_id/pings", "/repos/:owner/:repo/hooks/:hook_id"]},
{"headers": ["List referrers", "List paths", "Views", "Clones"], "methods": ["GET", "GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/traffic/popular/referrers", "/repos/:owner/:repo/traffic/popular/paths", "/repos/:owner/:repo/traffic/views", "/repos/:owner/:repo/traffic/clones"]},
{"headers": ["Create a status", "List statuses for a specific ref", "Get the combined status for a specific ref"], "methods": ["POST", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/statuses/:sha", "/repos/:owner/:repo/commits/:ref/statuses", "/repos/:owner/:repo/commits/:ref/status"]},
{"headers": ["Get contributors list with additions, deletions, and commit counts", "Get the last year of commit activity data", "Get the number of additions and deletions per week", "Get the weekly commit count for the repository owner and everyone else", "Get the number of commits per hour in each day"], "methods": ["GET", "GET", "GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/stats/contributors", "/repos/:owner/:repo/stats/commit_activity", "/repos/:owner/:repo/stats/code_frequency", "/repos/:owner/:repo/stats/participation", "/repos/:owner/:repo/stats/punch_card"]},
{"headers": ["List releases for a repository", "Get a single release", "Get the latest release", "Get a release by tag name", "Create a release", "Edit a release", "Delete a release", "List assets for a release", "Upload a release asset", "Get a single release asset", "Edit a release asset", "Delete a release asset"], "methods": ["GET", "GET", "GET", "GET", "POST", "PATCH", "DELETE", "GET", "POST", "POST", "GET", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/releases", "/repos/:owner/:repo/releases/:release_id", "/repos/:owner/:repo/releases/latest", "/repos/:owner/:repo/releases/tags/:tag", "/repos/:owner/:repo/releases", "/repos/:owner/:repo/releases/:release_id", "/repos/:owner/:repo/releases/:release_id", "/repos/:owner/:repo/releases/:release_id/assets", ":server/repos/:owner/:repo/releases/:release_id/assets{?name,label}", "https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets?name=foo.zip", "/repos/:owner/:repo/releases/assets/:asset_id", "/repos/:owner/:repo/releases/assets/:asset_id", "/repos/:owner/:repo/releases/assets/:asset_id"]},
{"headers": ["Get information about a Pages site", "Enable a Pages site", "Disable a Pages site", "Update information about a Pages site", "Request a page build", "List Pages builds", "Get latest Pages build", "Get a specific Pages build"], "methods": ["GET", "POST", "DELETE", "PUT", "POST", "GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/pages", "/repos/:owner/:repo/pages", "/repos/:owner/:repo/pages", "/repos/:owner/:repo/pages", "/repos/:owner/:repo/pages/builds", "/repos/:owner/:repo/pages/builds", "/repos/:owner/:repo/pages/builds/latest", "/repos/:owner/:repo/pages/builds/:build_id"]},
{"headers": ["Invite a user to a repository", "List invitations for a repository", "Delete a repository invitation", "Update a repository invitation", "List a user's repository invitations", "Accept a repository invitation", "Decline a repository invitation"], "methods": ["GET", "DELETE", "PATCH", "GET", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/invitations", "/repos/:owner/:repo/invitations/:invitation_id", "/repos/:owner/:repo/invitations/:invitation_id", "/user/repository_invitations", "/user/repository_invitations/:invitation_id", "/user/repository_invitations/:invitation_id"]},
{"headers": ["Perform a merge"], "methods": ["POST"], "endpoints": ["/repos/:owner/:repo/merges"]},
{"headers": ["List forks", "Create a fork"], "methods": ["GET", "POST"], "endpoints": ["/repos/:owner/:repo/forks", "/repos/:owner/:repo/forks"]},
{"headers": ["List downloads for a repository", "Get a single download", "Delete a download"], "methods": ["GET", "GET", "DELETE"], "endpoints": ["/repos/:owner/:repo/downloads", "/repos/:owner/:repo/downloads/:download_id", "/repos/:owner/:repo/downloads/:download_id"]},
{"headers": ["List deployments", "Get a single deployment", "Create a deployment", "Update a deployment", "List deployment statuses", "Get a single deployment status", "Create a deployment status"], "methods": ["GET", "GET", "POST", "GET", "GET", "POST"], "endpoints": ["/repos/:owner/:repo/deployments", "/repos/:owner/:repo/deployments/:deployment_id", "/repos/:owner/:repo/deployments", "/repos/:owner/:repo/deployments/:deployment_id/statuses", "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id", "/repos/:owner/:repo/deployments/:deployment_id/statuses"]},
{"headers": ["List deploy keys", "Get a deploy key", "Add a new deploy key", "Edit a deploy key", "Remove a deploy key"], "methods": ["GET", "GET", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/keys", "/repos/:owner/:repo/keys/:key_id", "/repos/:owner/:repo/keys", "/repos/:owner/:repo/keys/:key_id"]},
{"headers": ["Get the README", "Get contents", "Create or update a file", "Delete a file", "Get archive link", "Custom media types"], "methods": ["GET", "GET", "PUT", "DELETE", "GET"], "endpoints": ["/repos/:owner/:repo/readme", "/repos/:owner/:repo/contents/:path", "/repos/:owner/:repo/contents/:path", "/repos/:owner/:repo/contents/:path", "/repos/:owner/:repo/:archive_format/:ref"]},
{"headers": [], "methods": ["GET"], "endpoints": ["/repos/:owner/:repo/community/profile"]},
{"headers": ["List commits on a repository", "Get a single commit", "Compare two commits", "List branches for HEAD commit", "List pull requests associated with commit"], "methods": ["GET", "GET", "GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/commits", "/repos/:owner/:repo/commits/:ref", "/repos/:owner/:repo/compare/:base...:head", "/repos/:owner/:repo/commits/:commit_sha/branches-where-head", "/repos/:owner/:repo/commits/:commit_sha/pulls"]},
{"headers": ["List commit comments for a repository", "List comments for a single commit", "Create a commit comment", "Get a single commit comment", "Update a commit comment", "Delete a commit comment", "Custom media types"], "methods": ["GET", "GET", "POST", "GET", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/comments", "/repos/:owner/:repo/commits/:commit_sha/comments", "/repos/:owner/:repo/commits/:commit_sha/comments", "/repos/:owner/:repo/comments/:comment_id", "/repos/:owner/:repo/comments/:comment_id", "/repos/:owner/:repo/comments/:comment_id"]},
{"headers": ["List collaborators", "Check if a user is a collaborator", "Review a user's permission level", "Add user as a collaborator", "Remove user as a collaborator"], "methods": ["GET", "GET", "GET", "PUT", "DELETE"], "endpoints": ["/repos/:owner/:repo/collaborators", "/repos/:owner/:repo/collaborators/:username", "/repos/:owner/:repo/collaborators/:username/permission", "/repos/:owner/:repo/collaborators/:username", "/repos/:owner/:repo/collaborators/:username"]},
{"headers": ["List branches", "Get branch", "Get branch protection", "Update branch protection", "Remove branch protection", "Get required status checks of protected branch", "Update required status checks of protected branch", "Remove required status checks of protected branch", "List required status checks contexts of protected branch", "Replace required status checks contexts of protected branch", "Add required status checks contexts of protected branch", "Remove required status checks contexts of protected branch", "Get pull request review enforcement of protected branch", "Update pull request review enforcement of protected branch", "Remove pull request review enforcement of protected branch", "Get required signatures of protected branch", "Add required signatures of protected branch", "Remove required signatures of protected branch", "Get admin enforcement of protected branch", "Add admin enforcement of protected branch", "Remove admin enforcement of protected branch", "Get restrictions of protected branch", "Remove restrictions of protected branch", "List teams with access to protected branch", "Replace team restrictions of protected branch", "Add team restrictions of protected branch", "Remove team restrictions of protected branch", "List users with access to protected branch", "Replace user restrictions of protected branch", "Add user restrictions of protected branch", "Remove user restrictions of protected branch", "List apps with access to protected branch", "Replace app restrictions of protected branch", "Add app restrictions of protected branch", "Remove app restrictions of protected branch"], "methods": ["GET", "GET", "GET", "PUT", "DELETE", "GET", "PATCH", "DELETE", "GET", "PUT", "POST", "DELETE", "GET", "PATCH", "DELETE", "GET", "POST", "DELETE", "GET", "POST", "DELETE", "GET", "DELETE", "GET", "PUT", "POST", "DELETE", "GET", "PUT", "POST", "DELETE", "GET", "PUT", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/branches", "/repos/:owner/:repo/branches/:branch", "/repos/:owner/:repo/branches/:branch/protection", "/repos/:owner/:repo/branches/:branch/protection", "/repos/:owner/:repo/branches/:branch/protection", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts", "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts", "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews", "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews", "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews", "/repos/:owner/:repo/branches/:branch/protection/required_signatures", "/repos/:owner/:repo/branches/:branch/protection/required_signatures", "/repos/:owner/:repo/branches/:branch/protection/required_signatures", "/repos/:owner/:repo/branches/:branch/protection/enforce_admins", "/repos/:owner/:repo/branches/:branch/protection/enforce_admins", "/repos/:owner/:repo/branches/:branch/protection/enforce_admins", "/repos/:owner/:repo/branches/:branch/protection/restrictions", "/repos/:owner/:repo/branches/:branch/protection/restrictions", "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams", "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams", "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams", "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams", "/repos/:owner/:repo/branches/:branch/protection/restrictions/users", "/repos/:owner/:repo/branches/:branch/protection/restrictions/users", "/repos/:owner/:repo/branches/:branch/protection/restrictions/users", "/repos/:owner/:repo/branches/:branch/protection/restrictions/users", "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps", "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps", "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps", "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"]},
{"headers": ["List your repositories", "List user repositories", "List organization repositories", "List all public repositories", "Create", "Create repository using a repository template", "Get", "Edit", "List all topics for a repository", "Replace all topics for a repository", "Check if vulnerability alerts are enabled for a repository", "Enable vulnerability alerts", "Disable vulnerability alerts", "Enable automated security fixes", "Disable automated security fixes", "List contributors", "List languages", "List teams", "List tags", "Delete a repository", "Transfer a repository", "Create a repository dispatch event"], "methods": ["GET", "GET", "GET", "POST", "POST", "GET", "PATCH", "GET", "PUT", "GET", "PUT", "DELETE", "PUT", "DELETE", "GET", "GET", "GET", "GET", "DELETE", "POST", "POST"], "endpoints": ["/user/repos", "/users/:username/repos", "/repositories", "/user/repos", "/repos/:template_owner/:template_repo/generate", "/repos/:owner/:repo", "/repos/:owner/:repo", "/repos/:owner/:repo/topics", "/repos/:owner/:repo/topics", "/repos/:owner/:repo/vulnerability-alerts", "/repos/:owner/:repo/vulnerability-alerts", "/repos/:owner/:repo/vulnerability-alerts", "/repos/:owner/:repo/automated-security-fixes", "/repos/:owner/:repo/automated-security-fixes", "/repos/:owner/:repo/contributors", "/repos/:owner/:repo/languages", "/repos/:owner/:repo/teams", "/repos/:owner/:repo/tags", "/repos/:owner/:repo", "/repos/:owner/:repo/transfer", "/repos/:owner/:repo/dispatches"]},
{"headers": ["Reaction types", "List reactions for a commit comment", "Create reaction for a commit comment", "List reactions for an issue", "Create reaction for an issue", "List reactions for an issue comment", "Create reaction for an issue comment", "List reactions for a pull request review comment", "Create reaction for a pull request review comment", "List reactions for a team discussion", "Create reaction for a team discussion", "List reactions for a team discussion comment", "Create reaction for a team discussion comment", "Delete a reaction"], "methods": ["GET", "POST", "GET", "POST", "GET", "POST", "GET", "POST", "GET", "POST", "GET", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/comments/:comment_id/reactions", "/repos/:owner/:repo/comments/:comment_id/reactions", "/repos/:owner/:repo/issues/:issue_number/reactions", "/repos/:owner/:repo/issues/:issue_number/reactions", "/repos/:owner/:repo/issues/comments/:comment_id/reactions", "/repos/:owner/:repo/issues/comments/:comment_id/reactions", "/repos/:owner/:repo/pulls/comments/:comment_id/reactions", "/repos/:owner/:repo/pulls/comments/:comment_id/reactions", "/teams/:team_id/discussions/:discussion_number/reactions", "/teams/:team_id/discussions/:discussion_number/reactions", "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions", "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions", "/reactions/:reaction_id"]},
{"headers": ["List review requests", "Create a review request", "Delete a review request"], "methods": ["GET", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/pulls/:pull_number/requested_reviewers", "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers", "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"]},
{"headers": ["List comments on a pull request", "List comments in a repository", "Get a single comment", "Create a comment", "Create a review comment reply", "Edit a comment", "Delete a comment", "Custom media types"], "methods": ["GET", "GET", "GET", "POST", "POST", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/pulls/:pull_number/comments", "/repos/:owner/:repo/pulls/comments", "/repos/:owner/:repo/pulls/comments/:comment_id", "/repos/:owner/:repo/pulls/:pull_number/comments", "/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies", "/repos/:owner/:repo/pulls/comments/:comment_id", "/repos/:owner/:repo/pulls/comments/:comment_id"]},
{"headers": ["List reviews on a pull request", "Get a single review", "Delete a pending review", "Get comments for a single review", "Create a pull request review", "Update a pull request review", "Submit a pull request review", "Dismiss a pull request review"], "methods": ["GET", "GET", "DELETE", "GET", "POST", "PUT", "POST", "PUT"], "endpoints": ["/repos/:owner/:repo/pulls/:pull_number/reviews", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments", "/repos/:owner/:repo/pulls/:pull_number/reviews", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events", "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals"]},
{"headers": ["Link Relations", "List pull requests", "Get a single pull request", "Create a pull request", "Update a pull request branch", "Update a pull request", "List commits on a pull request", "List pull requests files", "Get if a pull request has been merged", "Merge a pull request (Merge Button)", "Labels, assignees, and milestones", "Custom media types"], "methods": ["GET", "GET", "POST", "PUT", "PATCH", "GET", "GET", "GET", "PUT"], "endpoints": ["/repos/:owner/:repo/pulls", "/repos/:owner/:repo/pulls/:pull_number", "/repos/:owner/:repo/pulls", "/repos/:owner/:repo/pulls/:pull_number/update-branch", "/repos/:owner/:repo/pulls/:pull_number", "/repos/:owner/:repo/pulls/:pull_number/commits", "/repos/:owner/:repo/pulls/:pull_number/files", "/repos/:owner/:repo/pulls/:pull_number/merge", "/repos/:owner/:repo/pulls/:pull_number/merge"]},
{"headers": ["List project columns", "Get a project column", "Create a project column", "Update a project column", "Delete a project column", "Move a project column"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE", "POST"], "endpoints": ["/projects/:project_id/columns", "/projects/columns/:column_id", "/projects/:project_id/columns", "/projects/columns/:column_id", "/projects/columns/:column_id", "/projects/columns/:column_id/moves"]},
{"headers": ["List collaborators", "Review a user's permission level", "Add user as a collaborator", "Remove user as a collaborator"], "methods": ["GET", "GET", "PUT", "DELETE"], "endpoints": ["/projects/:project_id/collaborators", "/projects/:project_id/collaborators/:username/permission", "/projects/:project_id/collaborators/:username", "/projects/:project_id/collaborators/:username"]},
{"headers": ["List project cards", "Get a project card", "Create a project card", "Update a project card", "Delete a project card", "Move a project card"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE", "POST"], "endpoints": ["/projects/columns/:column_id/cards", "/projects/columns/cards/:card_id", "/projects/columns/:column_id/cards", "/projects/columns/cards/:card_id", "/projects/columns/cards/:card_id", "/projects/columns/cards/:card_id/moves"]},
{"headers": ["List repository projects", "List organization projects", "List user projects", "Get a project", "Create a repository project", "Create an organization project", "Create a user project", "Update a project", "Delete a project"], "methods": ["GET", "GET", "GET", "POST", "POST", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/projects", "/users/:username/projects", "/projects/:project_id", "/repos/:owner/:repo/projects", "/user/projects", "/projects/:project_id", "/projects/:project_id"]},
{"headers": ["Scopes & Restrictions", "List hooks", "Get single hook", "Create a hook", "Edit a hook", "Ping a hook", "Delete a hook", "Receiving Webhooks"], "methods": [], "endpoints": []},
{"headers": ["List outside collaborators", "Remove outside collaborator", "Convert member to outside collaborator"], "methods": [], "endpoints": []},
{"headers": ["Members list", "Check membership", "Add a member", "Remove a member", "Public members list", "Check public membership", "Publicize a user's membership", "Conceal a user's membership", "Get organization membership", "Add or update organization membership", "Remove organization membership", "List organization invitation teams", "List pending organization invitations", "Create organization invitation", "List your organization memberships", "Get your organization membership", "Edit your organization membership"], "methods": ["GET"], "endpoints": ["/user/memberships/orgs"]},
{"headers": ["List blocked users", "Check whether a user is blocked from an organization", "Block a user", "Unblock a user"], "methods": [], "endpoints": []},
{"headers": ["List your organizations", "List all organizations", "List user organizations", "List installations for an organization", "Get an organization", "Edit an organization", "List credential authorizations for an organization", "Remove a credential authorization for an organization"], "methods": ["GET", "GET", "GET"], "endpoints": ["/user/orgs", "/organizations", "/users/:username/orgs"]},
{"headers": [], "methods": ["GET"], "endpoints": ["/meta"]},
{"headers": ["Render an arbitrary Markdown document", "Render a Markdown document in raw mode"], "methods": ["POST", "POST"], "endpoints": ["/markdown", "/markdown/raw"]},
{"headers": ["List commonly used licenses", "Get an individual license", "Get the contents of a repository's license"], "methods": ["GET", "GET", "GET"], "endpoints": ["/licenses", "/licenses/:license", "/repos/:owner/:repo/license"]},
{"headers": [], "methods": ["GET"], "endpoints": ["/emojis"]},
{"headers": ["Listing available templates", "Get a single template"], "methods": ["GET", "GET"], "endpoints": ["/gitignore/templates", "/gitignore/templates/:name"]},
{"headers": ["List all codes of conduct", "Get an individual code of conduct", "Get a repository's code of conduct", "Get the contents of a repository's code of conduct"], "methods": ["GET", "GET", "GET", "GET"], "endpoints": ["/codes_of_conduct", "/codes_of_conduct/:key", "/repos/:owner/:repo", "/repos/:owner/:repo/community/code_of_conduct"]},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["Start a user migration", "Get a list of user migrations", "Get the status of a user migration", "Download a user migration archive", "Delete a user migration archive", "Unlock a user repository"], "methods": ["POST", "GET", "GET", "GET", "DELETE", "DELETE"], "endpoints": ["/user/migrations", "/user/migrations", "/user/migrations/:migration_id", "/user/migrations/:migration_id/archive", "/user/migrations/:migration_id/archive", "/user/migrations/:migration_id/repos/:repo_name/lock"]},
{"headers": ["Start an import", "Get import progress", "Update existing import", "Get commit authors", "Map a commit author", "Set Git LFS preference", "Get large files", "Cancel an import"], "methods": ["PUT", "GET", "PATCH", "GET", "PATCH", "PATCH", "GET", "DELETE"], "endpoints": ["/repos/:owner/:repo/import", "/repos/:owner/:repo/import", "/repos/:owner/:repo/import", "/repos/:owner/:repo/import/authors", "/repos/:owner/:repo/import/authors/:author_id", "/repos/:owner/:repo/import/lfs", "/repos/:owner/:repo/import/large_files", "/repos/:owner/:repo/import"]},
{"headers": ["Start an organization migration", "Get a list of organization migrations", "Get the status of an organization migration", "Download an organization migration archive", "Delete an organization migration archive", "Unlock an organization repository"], "methods": [], "endpoints": []},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["List events for an issue"], "methods": ["GET"], "endpoints": ["/repos/:owner/:repo/issues/:issue_number/timeline"]},
{"headers": ["List milestones for a repository", "Get a single milestone", "Create a milestone", "Update a milestone", "Delete a milestone"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/milestones", "/repos/:owner/:repo/milestones/:milestone_number", "/repos/:owner/:repo/milestones", "/repos/:owner/:repo/milestones/:milestone_number", "/repos/:owner/:repo/milestones/:milestone_number"]},
{"headers": ["List all labels for this repository", "Get a single label", "Create a label", "Update a label", "Delete a label", "List labels on an issue", "Add labels to an issue", "Remove a label from an issue", "Replace all labels for an issue", "Remove all labels from an issue", "Get labels for every issue in a milestone"], "methods": ["GET", "GET", "POST", "PATCH", "DELETE", "GET", "POST", "DELETE", "PUT", "DELETE", "GET"], "endpoints": ["/repos/:owner/:repo/labels", "/repos/:owner/:repo/labels/:name", "/repos/:owner/:repo/labels", "/repos/:owner/:repo/labels/:name", "/repos/:owner/:repo/labels/:name", "/repos/:owner/:repo/issues/:issue_number/labels", "/repos/:owner/:repo/issues/:issue_number/labels", "/repos/:owner/:repo/issues/:issue_number/labels/:name", "/repos/:owner/:repo/issues/:issue_number/labels", "/repos/:owner/:repo/issues/:issue_number/labels", "/repos/:owner/:repo/milestones/:milestone_number/labels"]},
{"headers": ["List events for an issue", "List events for a repository", "Get a single event"], "methods": ["GET", "GET", "GET"], "endpoints": ["/repos/:owner/:repo/issues/:issue_number/events", "/repos/:owner/:repo/issues/events", "/repos/:owner/:repo/issues/events/:event_id"]},
{"headers": ["List comments on an issue", "List comments in a repository", "Get a single comment", "Create a comment", "Edit a comment", "Delete a comment", "Custom media types"], "methods": ["GET", "GET", "GET", "POST", "PATCH", "DELETE"], "endpoints": ["/repos/:owner/:repo/issues/:issue_number/comments", "/repos/:owner/:repo/issues/comments", "/repos/:owner/:repo/issues/comments/:comment_id", "/repos/:owner/:repo/issues/:issue_number/comments", "/repos/:owner/:repo/issues/comments/:comment_id", "/repos/:owner/:repo/issues/comments/:comment_id"]},
{"headers": ["List assignees", "Check assignee", "Add assignees to an issue", "Remove assignees from an issue"], "methods": ["GET", "GET", "POST", "DELETE"], "endpoints": ["/repos/:owner/:repo/assignees", "/repos/:owner/:repo/assignees/:assignee", "/repos/:owner/:repo/issues/:issue_number/assignees", "/repos/:owner/:repo/issues/:issue_number/assignees"]},
{"headers": ["List issues", "List issues for a repository", "Get a single issue", "Create an issue", "Edit an issue", "Lock an issue", "Unlock an issue", "Custom media types"], "methods": ["GET", "GET", "GET", "GET", "POST", "PATCH", "PUT", "DELETE"], "endpoints": ["/issues", "/user/issues", "/repos/:owner/:repo/issues", "/repos/:owner/:repo/issues/:issue_number", "/repos/:owner/:repo/issues", "/repos/:owner/:repo/issues/:issue_number", "/repos/:owner/:repo/issues/:issue_number/lock", "/repos/:owner/:repo/issues/:issue_number/lock"]},
{"headers": ["Get interaction restrictions for a repository", "Add or update interaction restrictions for a repository", "Remove interaction restrictions for a repository"], "methods": ["GET", "PUT", "DELETE"], "endpoints": ["/repos/:owner/:repo/interaction-limits", "/repos/:owner/:repo/interaction-limits", "/repos/:owner/:repo/interaction-limits"]},
{"headers": ["Get interaction restrictions for an organization", "Add or update interaction restrictions for an organization", "Remove interaction restrictions for an organization"], "methods": [], "endpoints": []},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["Testing with stubbed endpoints", "List all plans for your Marketplace listing", "List all GitHub accounts (user or organization) on a specific plan", "Check if a GitHub account is associated with any Marketplace listing", "Get a user's Marketplace purchases"], "methods": ["GET", "GET", "GET", "GET", "GET", "GET", "GET", "GET"], "endpoints": ["/marketplace_listing/plans", "/marketplace_listing/stubbed/plans", "/marketplace_listing/plans/:plan_id/accounts", "/marketplace_listing/stubbed/plans/:plan_id/accounts", "/marketplace_listing/accounts/:account_id", "/marketplace_listing/stubbed/accounts/:account_id", "/user/marketplace_purchases", "/user/marketplace_purchases/stubbed"]},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["Metadata permissions", "Permission on \"administration\"", "Permission on \"blocking\"", "Permission on \"checks\"", "Permission on \"contents\"", "Permission on \"deployments\"", "Permission on \"emails\"", "Permission on \"followers\"", "Permission on \"gpg keys\"", "Permission on \"issues\"", "Permission on \"keys\"", "Permission on \"members\"", "Permission on \"organization administration\"", "Permission on \"organization hooks\"", "Permission on \"organization projects\"", "Permission on \"organization user blocking\"", "Permission on \"pages\"", "Permission on \"pull requests\"", "Permission on \"repository hooks\"", "Permission on \"repository projects\"", "Permission on \"single file\"", "Permission on \"starring\"", "Permission on \"statuses\"", "Permission on \"team discussions\""], "methods": [], "endpoints": []},
{"headers": ["List repositories", "List installations for a user", "List repositories accessible to the user for an installation", "Add repository to installation", "Remove repository from installation", "Create a content attachment"], "methods": ["GET", "GET", "GET", "PUT", "DELETE", "POST"], "endpoints": ["/installation/repositories", "/user/installations", "/user/installations/:installation_id/repositories", "/user/installations/:installation_id/repositories/:repository_id", "/user/installations/:installation_id/repositories/:repository_id", "/content_references/:content_reference_id/attachments"]},
{"headers": ["Get a single GitHub App", "Get the authenticated GitHub App", "List installations", "Get an installation", "Delete an installation", "Create a new installation token", "Get an organization installation", "Get a repository installation", "Get a user installation", "Create a GitHub App from a manifest"], "methods": ["GET", "GET", "GET", "GET", "DELETE", "POST", "GET", "GET", "POST"], "endpoints": ["/apps/:app_slug", "/app", "/app/installations", "/app/installations/:installation_id", "/app/installations/:installation_id", "/app/installations/:installation_id/access_tokens", "/repos/:owner/:repo/installation", "/users/:username/installation", "/app-manifests/:code/conversions"]},
{"headers": ["Get a tree", "Get a tree recursively", "Create a tree"], "methods": ["GET", "GET", "POST"], "endpoints": ["/repos/:owner/:repo/git/trees/:tree_sha", "/repos/:owner/:repo/git/trees/:tree_sha?recursive=1", "/repos/:owner/:repo/git/trees"]},
{"headers": ["Get a tag", "Create a tag object"], "methods": ["GET", "POST"], "endpoints": ["/repos/:owner/:repo/git/tags/:tag_sha", "/repos/:owner/:repo/git/tags"]},
{"headers": [], "methods": [], "endpoints": []},
{"headers": ["Migrations", "Source import", "Enhanced deployments", "Reactions", "Timeline", "Integrations", "Projects", "Commit search", "Community profile metrics", "User blocking", "Repository topics", "Codes of conduct", "Nested teams", "Repository transfer", "Add lock reason", "Organization invitations", "Team discussions", "Label emoji, search, and descriptions", "Require signed commits", "Require multiple approving reviews", "Retrieve hovercard information", "Check runs and check suites API", "Project card details", "GitHub App Manifests", "Deployment statuses", "Repository creation permissions", "Content attachments", "Interaction restrictions for repositories and organizations", "Draft pull requests", "Enable and disable Pages", "List branches or pull requests for a commit", "Uninstall a GitHub App", "Enable or disable vulnerability alerts for a repository", "Update a pull request branch", "Enable or disable automated security fixes", "Create and use repository templates"], "methods": [], "endpoints": []},
{"headers": ["Why am I getting a 404 error on a repository that exists?", "Why am I not seeing all my results?"], "methods": [], "endpoints": []},
{"headers": ["Basic Authentication", "Working with two-factor authentication"], "methods": [], "endpoints": []},
{"headers": ["List your grants", "Get a single grant", "Delete a grant", "List your authorizations", "Get a single authorization", "Create a new authorization", "Get-or-create an authorization for a specific app", "Get-or-create an authorization for a specific app and fingerprint", "Update an existing authorization", "Delete an authorization", "Check an authorization", "Reset an authorization", "Revoke an authorization for an application", "Revoke a grant for an application", "More Information"], "methods": ["GET", "GET", "DELETE", "GET", "GET", "POST", "PUT", "PUT", "PATCH", "DELETE", "GET", "POST", "DELETE", "DELETE"], "endpoints": ["/applications/grants", "/applications/grants/:grant_id", "/applications/grants/:grant_id", "/authorizations", "/authorizations/:authorization_id", "/authorizations", "/authorizations/clients/:client_id", "/authorizations/clients/:client_id/:fingerprint", "/authorizations/:authorization_id", "/authorizations/:authorization_id", "/applications/:client_id/tokens/:access_token", "/applications/:client_id/tokens/:access_token", "/applications/:client_id/tokens/:access_token", "/applications/:client_id/grants/:access_token"]},
{"headers": ["Comment body properties", "Git blob properties", "Commits, commit comparison, and pull requests", "Repository contents", "Gists"], "methods": [], "endpoints": []},
{"headers": ["Current version", "Schema", "Authentication", "Parameters", "Root endpoint", "GraphQL global node IDs", "Client errors", "HTTP redirects", "HTTP verbs", "Hypermedia", "Pagination", "Rate limiting", "User agent required", "Conditional requests", "Cross origin resource sharing", "JSON-P callbacks", "Timezones"], "methods": ["GET", "GET"], "endpoints": ["/orgs/octokit/repos", "/repos/octokit/octokit.rb"]}
]